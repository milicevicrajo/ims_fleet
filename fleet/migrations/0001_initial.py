# Generated by Django 5.0.9 on 2024-12-02 15:49

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_code', models.IntegerField(unique=True, verbose_name='Šifra zaposlenog')),
                ('first_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Ime')),
                ('last_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Preziime')),
                ('position', models.CharField(max_length=100, verbose_name='Pozicija')),
                ('department_code', models.IntegerField(verbose_name='Šifra odeljenja')),
                ('gender', models.CharField(choices=[('M', 'Muški'), ('F', 'Ženski')], max_length=1, verbose_name='Pol')),
                ('date_of_birth', models.DateField(verbose_name='Datum rođenja')),
                ('date_of_joining', models.DateField(verbose_name='Datum zapošljavanja')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Broj telefona')),
            ],
        ),
        migrations.CreateModel(
            name='OrganizationalUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Naziv')),
                ('code', models.CharField(max_length=10, unique=True, verbose_name='Šifra organizacione jedinice')),
                ('center', models.CharField(max_length=10, verbose_name='Šifra centra')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Naziv tipa servisa')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Opis')),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_number', models.CharField(max_length=20, unique=True, verbose_name='Inventarni broj')),
                ('chassis_number', models.CharField(max_length=17, unique=True, verbose_name='Broj šasije')),
                ('brand', models.CharField(max_length=50, verbose_name='Marka')),
                ('model', models.CharField(max_length=50, verbose_name='Model')),
                ('year_of_manufacture', models.IntegerField(verbose_name='Godina proizvodnje')),
                ('first_registration_date', models.DateField(verbose_name='Datum prve registracije')),
                ('color', models.CharField(max_length=30, verbose_name='Boja')),
                ('number_of_axles', models.IntegerField(verbose_name='Broj osovina')),
                ('engine_volume', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Zapremina motora')),
                ('engine_number', models.CharField(max_length=50, unique=True, verbose_name='Broj motora')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Masa')),
                ('engine_power', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Snaga motora')),
                ('load_capacity', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Nosivost')),
                ('category', models.CharField(max_length=50, verbose_name='Kategorija')),
                ('maximum_permissible_weight', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Maksimalna dozvoljena masa')),
                ('fuel_type', models.CharField(max_length=20, verbose_name='Tip goriva')),
                ('number_of_seats', models.IntegerField(verbose_name='Broj sedišta')),
                ('purchase_value', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Nabavna vrednost vozila')),
                ('value', models.DecimalField(decimal_places=2, max_digits=12, null=True, verbose_name='Knjigovodstvena vrednost vozila')),
                ('service_interval', models.IntegerField(verbose_name='Servisni interval')),
                ('purchase_date', models.DateField(null=True, verbose_name='Datum nabavke')),
                ('center_code', models.CharField(max_length=20, null=True, verbose_name='Šifra centra (OJ)')),
                ('partner_code', models.CharField(max_length=20, null=True, verbose_name='Šifra partnera')),
                ('partner_name', models.CharField(max_length=100, null=True, verbose_name='Naziv partnera')),
                ('invoice_number', models.CharField(max_length=50, null=True, verbose_name='Broj fakture')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Opis')),
                ('otpis', models.BooleanField(default=False, editable=False, verbose_name='Otpis')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('allowed_centers', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TransactionOMV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issuer', models.CharField(max_length=255, verbose_name='Issuer')),
                ('customer', models.CharField(max_length=255, verbose_name='Customer')),
                ('card', models.CharField(max_length=255, verbose_name='Card')),
                ('license_plate_no', models.CharField(max_length=20, verbose_name='License plate No')),
                ('transaction_date', models.DateTimeField(verbose_name='Transaction date')),
                ('product_inv', models.CharField(blank=True, max_length=255, null=True, verbose_name='Product INV')),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Quantity')),
                ('gross_cc', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Gross CC')),
                ('vat', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='VAT')),
                ('voucher', models.CharField(blank=True, max_length=255, null=True, verbose_name='Voucher')),
                ('mileage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Mileage')),
                ('corrected_mileage', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Corrected mileage')),
                ('additional_info', models.TextField(blank=True, null=True, verbose_name='Additional info')),
                ('supply_country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Supply country')),
                ('site_town', models.CharField(blank=True, max_length=255, null=True, verbose_name='Site Town')),
                ('product_del', models.CharField(blank=True, max_length=255, null=True, verbose_name='Product DEL')),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Unit price')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Discount')),
                ('surcharge', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Surcharge')),
                ('vat_2010', models.CharField(blank=True, max_length=20, null=True, verbose_name='VAT2010')),
                ('supplier_currency', models.CharField(blank=True, max_length=20, null=True, verbose_name='Supplier currency')),
                ('invoice_no', models.CharField(blank=True, max_length=50, null=True, verbose_name='Invoice No')),
                ('invoice_date', models.DateField(blank=True, null=True, verbose_name='Invoice date')),
                ('invoiced', models.BooleanField(blank=True, default=False, null=True, verbose_name='Invoiced?')),
                ('state', models.CharField(blank=True, max_length=255, null=True, verbose_name='State')),
                ('supplier', models.CharField(blank=True, max_length=255, null=True, verbose_name='Supplier')),
                ('cost_1', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cost 1')),
                ('cost_2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cost 2')),
                ('reference_no', models.CharField(blank=True, max_length=255, null=True, verbose_name='Reference No')),
                ('record_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Record type')),
                ('amount_other', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Amount other')),
                ('is_list_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Is list price?')),
                ('approval_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Approval code')),
                ('date_to', models.DateField(blank=True, null=True, verbose_name='Date to')),
                ('final_trx', models.CharField(blank=True, max_length=50, null=True, verbose_name='Final Trx')),
                ('lpi', models.CharField(blank=True, max_length=50, null=True, verbose_name='LPI')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='omv_transactions', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionNIS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kupac', models.CharField(max_length=255, verbose_name='Kupac')),
                ('sifra_kupca', models.CharField(max_length=50, verbose_name='Šifra kupca')),
                ('broj_kartice', models.CharField(max_length=50, verbose_name='Broj kartice')),
                ('kompanijski_kod_kupca', models.CharField(max_length=50, verbose_name='Kompanijski kod kupca')),
                ('zemlja_sipanja', models.CharField(max_length=50, verbose_name='Zemlja sipanja')),
                ('benzinska_stanica', models.CharField(max_length=255, verbose_name='Benzinska stanica')),
                ('id_transakcije', models.CharField(max_length=100, verbose_name='ID transakcije')),
                ('app_kod', models.CharField(max_length=50, verbose_name='App kod')),
                ('datum_transakcije', models.DateTimeField(verbose_name='Datum transakcije')),
                ('tociono_mesto', models.CharField(max_length=50, verbose_name='Točiono mesto')),
                ('naziv_kartice', models.CharField(blank=True, max_length=100, null=True, verbose_name='Naziv kartice')),
                ('licenca', models.CharField(blank=True, max_length=50, null=True, verbose_name='Licenca')),
                ('broj_gazdinstva', models.CharField(blank=True, max_length=50, null=True, verbose_name='Broj gazdinstva')),
                ('registarska_oznaka_vozila', models.CharField(max_length=50, verbose_name='Registarska oznaka vozila')),
                ('broj_racuna', models.CharField(max_length=50, verbose_name='Broj računa')),
                ('kilometraza', models.IntegerField(blank=True, null=True, verbose_name='Kilometraža')),
                ('sipanje_van_rezervoara', models.BooleanField(verbose_name='Sipanje van rezervoara')),
                ('naziv_proizvoda', models.CharField(max_length=255, verbose_name='Naziv proizvoda')),
                ('kolicina', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Količina')),
                ('kolicina_kg', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Količina KG')),
                ('popust', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Popust')),
                ('primenjen_popust', models.CharField(max_length=255, verbose_name='Primenjen popust')),
                ('cena_sa_kase', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cena sa kase')),
                ('cena', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cena')),
                ('total_sa_kase', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Total sa kase')),
                ('total', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Total')),
                ('valuta', models.CharField(max_length=10, verbose_name='Valuta')),
                ('aktivirano_prekoracenje', models.BooleanField(verbose_name='Aktivirano prekoračenje')),
                ('kolicinsko_prekoracenje', models.BooleanField(verbose_name='Količinsko prekoračenje')),
                ('finansijsko_prekoracenje', models.BooleanField(verbose_name='Finansijsko prekoračenje')),
                ('nacin_ocitavanja_kartice', models.CharField(max_length=50, verbose_name='Način očitavanja kartice')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='nis_transactions', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='TrafficCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_number', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Registracioni broj mora biti u formatu AA999-AA ili AA9999-AA', regex='^[A-Z]{2}\\d{3,4}-[A-Z]{2}$')], verbose_name='Registracioni broj')),
                ('issue_date', models.DateField(verbose_name='Datum izdavanja')),
                ('valid_until', models.DateField(verbose_name='Važi do')),
                ('traffic_card_number', models.CharField(max_length=50, verbose_name='Broj saobraćajne dozvole')),
                ('serial_number', models.CharField(max_length=50, verbose_name='Serijski broj')),
                ('owner', models.CharField(max_length=100, verbose_name='Vlasnik')),
                ('homologation_number', models.CharField(max_length=50, verbose_name='Homologacioni broj')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traffic_cards', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('god', models.IntegerField(verbose_name='Godina')),
                ('sif_par_pl', models.CharField(max_length=20, verbose_name='Šifra partnera (pl)')),
                ('naz_par_pl', models.CharField(max_length=255, verbose_name='Naziv partnera (pl)')),
                ('datum', models.DateField(verbose_name='Datum')),
                ('sif_vrs', models.CharField(max_length=10, verbose_name='Šifra vrste')),
                ('br_naloga', models.CharField(max_length=50, verbose_name='Broj naloga')),
                ('vez_dok', models.CharField(max_length=50, verbose_name='Vezani dokument')),
                ('knt_pl', models.CharField(max_length=20, verbose_name='Konto pl')),
                ('potrazuje', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Potražuje')),
                ('sif_par_npl', models.CharField(max_length=20, verbose_name='Šifra partnera (npl)')),
                ('knt_npl', models.CharField(max_length=20, verbose_name='Konto npl')),
                ('duguje', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Duguje')),
                ('konto_vozila', models.CharField(max_length=20, verbose_name='Konto vozila')),
                ('kom', models.TextField(blank=True, null=True, verbose_name='Komada')),
                ('popravka_kategorija', models.CharField(max_length=100, verbose_name='Kategorija poptavke')),
                ('napomena', models.TextField(blank=True, null=True, verbose_name='Napomena')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_transactions', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_date', models.DateField(null=True, verbose_name='Datum servisa')),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Trošak')),
                ('provider', models.CharField(max_length=100, verbose_name='Dobavljač')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Opis')),
                ('service_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='services', to='fleet.servicetype', verbose_name='Tip servisa')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='services', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='Requisition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sif_pred', models.IntegerField(verbose_name='Šifra predmeta')),
                ('god', models.IntegerField(verbose_name='Godina')),
                ('br_dok', models.CharField(max_length=50, verbose_name='Broj dokumenta')),
                ('sif_vrsart', models.CharField(max_length=20, verbose_name='Šifra vrste artikla')),
                ('stavka', models.IntegerField(verbose_name='Stavka')),
                ('sif_art', models.CharField(max_length=20, verbose_name='Šifra artikla')),
                ('naz_art', models.CharField(max_length=255, verbose_name='Naziv artikla')),
                ('kol', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Količina')),
                ('cena', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cena')),
                ('vrednost_nab', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Vrednost nabavke')),
                ('mesec_unosa', models.IntegerField(verbose_name='Mesec unosa')),
                ('datum_trebovanja', models.DateField(verbose_name='Datum trebovanja')),
                ('napomena', models.TextField(blank=True, null=True, verbose_name='Napomena')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requisitions', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='PutniNalog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(verbose_name='Godina')),
                ('job_code', models.CharField(max_length=20, verbose_name='Šifra posla')),
                ('travel_location', models.CharField(max_length=100, verbose_name='Mesto putovanja')),
                ('contract_offer', models.CharField(max_length=50, verbose_name='Ugovor/ponuda')),
                ('travel_date', models.DateField(verbose_name='Datum putovanja')),
                ('return_date', models.DateField(verbose_name='Datum povratka')),
                ('advance_payment', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Avans')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='travel_orders', to='fleet.employee', verbose_name='Zaposleni')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='travel_orders', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner_pib', models.CharField(max_length=20, verbose_name='PIB partnera')),
                ('partner_name', models.CharField(max_length=100, verbose_name='Naziv partnera')),
                ('invoice_id', models.IntegerField(unique=True, verbose_name='ID fakture')),
                ('invoice_number', models.CharField(max_length=50, verbose_name='Broj fakture')),
                ('issue_date', models.DateField(verbose_name='Datum izdavanja')),
                ('insurance_type', models.CharField(max_length=50, verbose_name='Tip osiguranja')),
                ('policy_number', models.CharField(max_length=50, verbose_name='Broj polise')),
                ('premium_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Iznos premije')),
                ('start_date', models.DateField(verbose_name='Datum početka')),
                ('end_date', models.DateField(verbose_name='Datum završetka')),
                ('first_installment_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Iznos prve rate')),
                ('other_installments_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Iznos ostalih rata')),
                ('number_of_installments', models.IntegerField(verbose_name='Broj rata')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='policies', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='Lease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner_code', models.CharField(max_length=20, verbose_name='Šifra partnera')),
                ('partner_name', models.CharField(max_length=100, verbose_name='Naziv partnera')),
                ('job_code', models.CharField(max_length=20, verbose_name='Šifra posla')),
                ('contract_number', models.CharField(max_length=50, verbose_name='Broj ugovora')),
                ('current_payment_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Trenutna vrednost otplate')),
                ('start_date', models.DateField(verbose_name='Datum početka')),
                ('end_date', models.DateField(verbose_name='Datum završetka')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Napomena')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leases', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='JobCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_date', models.DateField(verbose_name='Datum dodele')),
                ('organizational_unit', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='vehicle_assignments', to='fleet.organizationalunit', verbose_name='Organizaciona jedinica')),
                ('vehicle', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='job_codes', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('violation', models.TextField(verbose_name='Prekršaj')),
                ('date', models.DateField(verbose_name='Datum')),
                ('location', models.CharField(max_length=100, verbose_name='Lokacija')),
                ('fine_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Iznos kazne')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Napomena')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to='fleet.employee', verbose_name='Zaposleni')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidents', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='FuelConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(verbose_name='Datum')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Količina')),
                ('fuel_type', models.CharField(max_length=20, verbose_name='Tip goriva')),
                ('cost_bruto', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Iznos - Bruto')),
                ('cost_neto', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Iznos - Neto')),
                ('supplier', models.CharField(max_length=50, verbose_name='Dobavljač')),
                ('job_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Šifra posla')),
                ('mileage', models.IntegerField(verbose_name='Kilometraža')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fuel_consumptions', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='DraftServiceTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('god', models.IntegerField(blank=True, null=True, verbose_name='Godina')),
                ('sif_par_pl', models.CharField(blank=True, max_length=20, null=True, verbose_name='Šifra partnera (pl)')),
                ('naz_par_pl', models.CharField(blank=True, max_length=255, null=True, verbose_name='Naziv partnera (pl)')),
                ('datum', models.DateField(verbose_name='Datum')),
                ('sif_vrs', models.CharField(blank=True, max_length=10, null=True, verbose_name='Šifra vrste')),
                ('br_naloga', models.CharField(max_length=50, verbose_name='Broj naloga')),
                ('vez_dok', models.CharField(blank=True, max_length=50, null=True, verbose_name='Vezani dokument')),
                ('knt_pl', models.CharField(blank=True, max_length=20, null=True, verbose_name='Konto pl')),
                ('potrazuje', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Potražuje')),
                ('sif_par_npl', models.CharField(blank=True, max_length=20, null=True, verbose_name='Šifra partnera (npl)')),
                ('knt_npl', models.CharField(blank=True, max_length=20, null=True, verbose_name='Konto npl')),
                ('duguje', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Duguje')),
                ('konto_vozila', models.CharField(blank=True, max_length=20, null=True, verbose_name='Konto vozila')),
                ('kom', models.TextField(blank=True, null=True, verbose_name='Komada')),
                ('popravka_kategorija', models.CharField(blank=True, max_length=100, null=True, verbose_name='Kategorija popravke')),
                ('napomena', models.TextField(blank=True, null=True, verbose_name='Napomena')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='draft_service_transactions', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='DraftRequisition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sif_pred', models.IntegerField(blank=True, null=True, verbose_name='Šifra predmeta')),
                ('god', models.IntegerField(blank=True, null=True)),
                ('br_dok', models.CharField(max_length=50)),
                ('sif_vrsart', models.CharField(blank=True, max_length=50, null=True)),
                ('stavka', models.CharField(blank=True, max_length=50, null=True)),
                ('sif_art', models.CharField(blank=True, max_length=50, null=True)),
                ('naz_art', models.CharField(blank=True, max_length=255, null=True)),
                ('kol', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cena', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('vrednost_nab', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('datum_trebovanja', models.DateField(blank=True, null=True)),
                ('napomena', models.TextField(blank=True, null=True)),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='draft_requisitions', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='DraftPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner_pib', models.CharField(blank=True, max_length=20, null=True, verbose_name='PIB partnera')),
                ('partner_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Naziv partnera')),
                ('invoice_id', models.IntegerField(blank=True, null=True, unique=True, verbose_name='ID fakture')),
                ('invoice_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Broj fakture')),
                ('issue_date', models.DateField(blank=True, null=True, verbose_name='Datum izdavanja')),
                ('insurance_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tip osiguranja')),
                ('policy_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Broj polise')),
                ('premium_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Iznos premije')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Datum početka')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Datum završetka')),
                ('first_installment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Iznos prve rate')),
                ('other_installments_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Iznos ostalih rata')),
                ('number_of_installments', models.IntegerField(blank=True, null=True, verbose_name='Broj rata')),
                ('vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='draft_policies', to='fleet.vehicle', verbose_name='Vozilo')),
            ],
        ),
        migrations.CreateModel(
            name='LeaseInterest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(verbose_name='Godina')),
                ('interest_amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Iznos kamate')),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lease_interests', to='fleet.lease', verbose_name='Lizing')),
            ],
            options={
                'unique_together': {('year', 'lease')},
            },
        ),
        migrations.AddConstraint(
            model_name='transactionomv',
            constraint=models.UniqueConstraint(fields=('license_plate_no', 'transaction_date', 'product_inv'), name='unique_license_plate_transaction'),
        ),
        migrations.AddConstraint(
            model_name='transactionnis',
            constraint=models.UniqueConstraint(fields=('datum_transakcije', 'registarska_oznaka_vozila', 'naziv_proizvoda'), name='unique_transaction'),
        ),
        migrations.AddConstraint(
            model_name='servicetransaction',
            constraint=models.UniqueConstraint(fields=('datum', 'duguje', 'vez_dok', 'br_naloga'), name='unique_service_transaction'),
        ),
        migrations.AddConstraint(
            model_name='fuelconsumption',
            constraint=models.UniqueConstraint(fields=('date', 'cost_bruto', 'amount'), name='unique_fuel_consumption'),
        ),
    ]
